@model ChalmersxTools.Models.View.TemperatureMeasurementToolViewModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>TemperatureMeasurementToolView</title>
    <link href="css/main.css" rel="stylesheet" />
</head>
<body>
    <div>
        <div id="message-box">@Html.Raw(Model.ResponseMessage)</div>
        <form id="temperature-measurements" method="post">
            <fieldset>
                <legend>Enter your location (decimal degrees)</legend>
                <label for="lat">Latitude</label>
                <input type="text" name="lat" value="@(Model.Submission == null ? "" : Model.Submission.Position.Latitude.ToString())" />
                <label for="long">Longitude</label>
                <input type="text" name="long" value="@(Model.Submission == null ? "" : @Model.Submission.Position.Longitude.ToString())" />
            </fieldset>
            <fieldset>
                <legend>Enter your measurements</legend>
                <label for="measurement1">Temperature day 1</label>
                <input type="text" name="measurement1" value="@(Model.Submission == null ? "" : Model.Submission.Measurement1.ToString())" />
                <label for="measurement2">Temperature day 2</label>
                <input type="text" name="measurement2" value="@(Model.Submission == null ? "" : Model.Submission.Measurement2.ToString())" />
            </fieldset>
            <input type="hidden" name="action" value="@(Model.Submission == null ? "create" : "edit")">
            <input type="hidden" name="ltiSessionId" value="@Model.LtiSessionId">
            <input type="submit" value="Save" />
        </form>
        <div>
            <div class="heatmap" id="map-canvas"></div>
        </div>
        @if (Model.Roles == "Administrator" || Model.Roles == "Instructor")
        {
            <br>
            <hr>
            <br>
            <div>
                <p>This information is not visible for students.</p>
                <a href="/Tool/GetData?ltiSessionId=@Model.LtiSessionId">Download data</a>
            </div>
        }
    </div>
    <script src="https://maps.googleapis.com/maps/api/js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
    <script src="~/js/heatmap.min.js"></script>
    <script src="~/js/gmaps-heatmap.js"></script>
    <script>
        // don't forget to add gmaps-heatmap.js
        var myLatlng = new google.maps.LatLng(25.6586, -80.3568);
        // map options,
        var myOptions = {
            zoom: 3,
            center: myLatlng
        };
        // standard map
        map = new google.maps.Map(document.getElementById("map-canvas"), myOptions);
        // heatmap layer
        heatmap = new HeatmapOverlay(map, 
          {
              // radius should be small ONLY if scaleRadius is true (or small radius is intended)
              "radius": 2,
              "maxOpacity": 1, 
              // scales the radius based on map zoom
              "scaleRadius": true, 
              // if set to false the heatmap uses the global maximum for colorization
              // if activated: uses the data maximum within the current map boundaries 
              //   (there will always be a red spot with useLocalExtremas true)
              "useLocalExtrema": true,
              // which field name in your data represents the latitude - default "lat"
              latField: 'lat',
              // which field name in your data represents the longitude - default "lng"
              lngField: 'lng',
              // which field name in your data represents the data value - default "value"
              valueField: 'count'
          }
        );

        var testData = {
            max: 8,
            data: [{lat: 24.6408, lng:46.7728, count: 3},{lat: 50.75, lng:-1.55, count: 1}, ...]
        };

        heatmap.setData(testData);
    </script>
</body>
</html>
